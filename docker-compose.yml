services:
  telegram-bot:
    container_name: emergencia_telegram_bot_cont
    build: ./chatbot-telegram/
    ports:
      - "5000:5000"
    restart: unless-stopped
    working_dir: /app/flask_app    
    environment:
      - PYTHONUNBUFFERED=1
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    env_file:
      - .env  
    volumes:
      - ./chatbot-telegram/flask_app:/app/flask_app
      - ./chatbot-telegram/.venv:/app/.venv
    networks:
      - emergencia_network
    depends_on:
      - ngrok
    command: ["/bin/bash", "-c", "/app/set_webhook.sh && python /app/flask_app/app.py"]


  api-agentes:
    container_name: emergencia_node_cont
    build: ./api-agentes/app/
    ports:
      - ${BACKEND_PORT}:3000
    env_file:
      - .env  
    volumes:
      - ./api-agentes/app/:/app/
    networks:
      - emergencia_network

  ngrok:
    container_name: emergencia_ngrok_cont
    image: ngrok/ngrok
    env_file:
      - .env  
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN} 
    ports:
      - "4041:4040"  # Porta para acessar o dashboard do ngrok e ver os t√∫neis
    command: ["http", "telegram-bot:5000", "--log=stdout", "--hostname=${NGROK_HOSTNAME}"]
    networks:
      - emergencia_network
      
  dashboard:
    container_name: emergencia_dashboard_cont
    build: ./dashboard/
    ports:
      - "8501:8501"
    volumes:
      - ./dashboard:/app
      - ./chatbot-telegram/flask_app/ocorrencias.json:/app/chatbot-telegram/flask_app/ocorrencias.json
    networks:
      - emergencia_network
    depends_on:
      - telegram-bot


networks:
  emergencia_network:
    driver: bridge
